//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""b73f9d62-b2c4-4f76-ba94-1e9e4871c00c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""0f8d5595-d134-4648-aa7b-f0f33497b7a8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""783b152c-658a-40ab-bd00-48de9ade87de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sonar Knife"",
                    ""type"": ""Button"",
                    ""id"": ""1994eb1c-bbab-479d-980f-735bc4428e45"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Distraction Knife"",
                    ""type"": ""Button"",
                    ""id"": ""459d9d62-d4ec-4ae1-ab97-a4ad48817b95"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Teleport Knife"",
                    ""type"": ""Button"",
                    ""id"": ""404c1d29-b517-4123-8dd6-3b75ae4296b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""0120b432-70a6-4148-8aa5-30cc9714a0ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""55f0873e-a110-4ef0-8311-c152c8bdb113"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AimKnife"",
                    ""type"": ""Button"",
                    ""id"": ""8c167ec3-7d7e-4b1d-a12b-ad9bd0b6a432"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThrowKnife"",
                    ""type"": ""Button"",
                    ""id"": ""0456b4a4-9bb2-488f-8d26-fbe0ee55d693"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UnequipKnife"",
                    ""type"": ""Button"",
                    ""id"": ""b9bce079-7a6b-443e-ae73-e789438d6301"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActivateKnife"",
                    ""type"": ""Button"",
                    ""id"": ""093ccfd0-263f-42d8-85b2-cf56f08249ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleDebug"",
                    ""type"": ""Button"",
                    ""id"": ""35594cc4-5aa4-4230-bbbd-253557d53ce9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DevCheatF1"",
                    ""type"": ""Button"",
                    ""id"": ""0a4de168-9f0b-451a-981a-deea339223e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DevCheatF2"",
                    ""type"": ""Button"",
                    ""id"": ""f6573dd5-52d4-4783-b6f1-19f66db89e71"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DevCheatF3"",
                    ""type"": ""Button"",
                    ""id"": ""83238889-6fbc-42ca-a489-d48ec68a0325"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DevCheatF4"",
                    ""type"": ""Button"",
                    ""id"": ""f44a6940-0bc7-4b43-b4b8-8958ee51c259"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DevCheatF5"",
                    ""type"": ""Button"",
                    ""id"": ""0e2509fc-7a36-4d7e-b959-d7a97cf8b676"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DevCheatF6"",
                    ""type"": ""Button"",
                    ""id"": ""a0dd97fb-8298-42f6-af1d-52ed3b94435b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DevCheatF7"",
                    ""type"": ""Button"",
                    ""id"": ""b31f0f14-901e-4cc4-a41e-a7519c0520ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""08851892-fa96-44ec-a6c9-7f0217e1e6c2"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sonar Knife"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cac1bd96-9a4f-4344-becd-ccf91deb61a1"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Distraction Knife"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fff88e04-258a-45cd-b117-2106f9626a52"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Distraction Knife"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""ed939104-7d30-4ff8-bc01-ababbb37dc58"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6fa4cefa-b7f3-49c0-8082-c6ce23ce409b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllControlSchemes"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8d998780-1324-4d16-9797-58619eb5b3dc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllControlSchemes"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c94947ea-1d3a-4b4d-a554-5735eed5b0a5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllControlSchemes"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""282cc1f4-04de-485f-9932-1014a8a4d4ed"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllControlSchemes"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5ce0fd94-874f-41b7-8ac7-b95211d6fd6d"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""676bcc56-39ef-472b-8c35-b0024760a517"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb9d7975-1c8a-46c1-8d8a-90c267d19e83"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimKnife"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""486423a0-ade6-40a0-a032-ab7b6f3d4f14"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrowKnife"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""204f9c42-2087-4108-a971-1a4e144f947b"",
                    ""path"": ""<Keyboard>/#(F)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UnequipKnife"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97d817d3-96f1-4f0f-b90a-19697492096f"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Teleport Knife"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""446a018f-81ad-439d-a6e3-4c096343d8ad"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActivateKnife"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aaa5c85c-0dff-49da-8e9d-20f5bf4358b8"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleDebug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd2e1ad8-9d3f-4634-8ee0-42831ee1c1ad"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevCheatF1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9bd8eb8-6e90-45dc-a1f7-5fe26c2ad06c"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevCheatF2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5917601-8d40-4b08-ba4c-0ef258bf080a"",
                    ""path"": ""<Keyboard>/f3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevCheatF3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a9e6f5b-989c-4bde-acfb-8b25b3bd012f"",
                    ""path"": ""<Keyboard>/f4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevCheatF4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df9a35e2-07f8-420a-a504-97e865197445"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevCheatF5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14488fb3-0850-41ab-9b04-91f94fbb1684"",
                    ""path"": ""<Keyboard>/f6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevCheatF6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ea8b39a-f246-4630-890e-fb4408494c1c"",
                    ""path"": ""<Keyboard>/f7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DevCheatF7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6524d05e-6bf5-41fa-9efe-4db5fce1d477"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""AllControlSchemes"",
            ""bindingGroup"": ""AllControlSchemes"",
            ""devices"": []
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_SonarKnife = m_Player.FindAction("Sonar Knife", throwIfNotFound: true);
        m_Player_DistractionKnife = m_Player.FindAction("Distraction Knife", throwIfNotFound: true);
        m_Player_TeleportKnife = m_Player.FindAction("Teleport Knife", throwIfNotFound: true);
        m_Player_Crouch = m_Player.FindAction("Crouch", throwIfNotFound: true);
        m_Player_Run = m_Player.FindAction("Run", throwIfNotFound: true);
        m_Player_AimKnife = m_Player.FindAction("AimKnife", throwIfNotFound: true);
        m_Player_ThrowKnife = m_Player.FindAction("ThrowKnife", throwIfNotFound: true);
        m_Player_UnequipKnife = m_Player.FindAction("UnequipKnife", throwIfNotFound: true);
        m_Player_ActivateKnife = m_Player.FindAction("ActivateKnife", throwIfNotFound: true);
        m_Player_ToggleDebug = m_Player.FindAction("ToggleDebug", throwIfNotFound: true);
        m_Player_DevCheatF1 = m_Player.FindAction("DevCheatF1", throwIfNotFound: true);
        m_Player_DevCheatF2 = m_Player.FindAction("DevCheatF2", throwIfNotFound: true);
        m_Player_DevCheatF3 = m_Player.FindAction("DevCheatF3", throwIfNotFound: true);
        m_Player_DevCheatF4 = m_Player.FindAction("DevCheatF4", throwIfNotFound: true);
        m_Player_DevCheatF5 = m_Player.FindAction("DevCheatF5", throwIfNotFound: true);
        m_Player_DevCheatF6 = m_Player.FindAction("DevCheatF6", throwIfNotFound: true);
        m_Player_DevCheatF7 = m_Player.FindAction("DevCheatF7", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_SonarKnife;
    private readonly InputAction m_Player_DistractionKnife;
    private readonly InputAction m_Player_TeleportKnife;
    private readonly InputAction m_Player_Crouch;
    private readonly InputAction m_Player_Run;
    private readonly InputAction m_Player_AimKnife;
    private readonly InputAction m_Player_ThrowKnife;
    private readonly InputAction m_Player_UnequipKnife;
    private readonly InputAction m_Player_ActivateKnife;
    private readonly InputAction m_Player_ToggleDebug;
    private readonly InputAction m_Player_DevCheatF1;
    private readonly InputAction m_Player_DevCheatF2;
    private readonly InputAction m_Player_DevCheatF3;
    private readonly InputAction m_Player_DevCheatF4;
    private readonly InputAction m_Player_DevCheatF5;
    private readonly InputAction m_Player_DevCheatF6;
    private readonly InputAction m_Player_DevCheatF7;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @SonarKnife => m_Wrapper.m_Player_SonarKnife;
        public InputAction @DistractionKnife => m_Wrapper.m_Player_DistractionKnife;
        public InputAction @TeleportKnife => m_Wrapper.m_Player_TeleportKnife;
        public InputAction @Crouch => m_Wrapper.m_Player_Crouch;
        public InputAction @Run => m_Wrapper.m_Player_Run;
        public InputAction @AimKnife => m_Wrapper.m_Player_AimKnife;
        public InputAction @ThrowKnife => m_Wrapper.m_Player_ThrowKnife;
        public InputAction @UnequipKnife => m_Wrapper.m_Player_UnequipKnife;
        public InputAction @ActivateKnife => m_Wrapper.m_Player_ActivateKnife;
        public InputAction @ToggleDebug => m_Wrapper.m_Player_ToggleDebug;
        public InputAction @DevCheatF1 => m_Wrapper.m_Player_DevCheatF1;
        public InputAction @DevCheatF2 => m_Wrapper.m_Player_DevCheatF2;
        public InputAction @DevCheatF3 => m_Wrapper.m_Player_DevCheatF3;
        public InputAction @DevCheatF4 => m_Wrapper.m_Player_DevCheatF4;
        public InputAction @DevCheatF5 => m_Wrapper.m_Player_DevCheatF5;
        public InputAction @DevCheatF6 => m_Wrapper.m_Player_DevCheatF6;
        public InputAction @DevCheatF7 => m_Wrapper.m_Player_DevCheatF7;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Interact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @SonarKnife.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSonarKnife;
                @SonarKnife.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSonarKnife;
                @SonarKnife.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSonarKnife;
                @DistractionKnife.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDistractionKnife;
                @DistractionKnife.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDistractionKnife;
                @DistractionKnife.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDistractionKnife;
                @TeleportKnife.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTeleportKnife;
                @TeleportKnife.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTeleportKnife;
                @TeleportKnife.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTeleportKnife;
                @Crouch.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Run.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @AimKnife.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimKnife;
                @AimKnife.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimKnife;
                @AimKnife.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimKnife;
                @ThrowKnife.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThrowKnife;
                @ThrowKnife.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThrowKnife;
                @ThrowKnife.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThrowKnife;
                @UnequipKnife.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUnequipKnife;
                @UnequipKnife.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUnequipKnife;
                @UnequipKnife.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUnequipKnife;
                @ActivateKnife.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnActivateKnife;
                @ActivateKnife.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnActivateKnife;
                @ActivateKnife.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnActivateKnife;
                @ToggleDebug.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleDebug;
                @ToggleDebug.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleDebug;
                @ToggleDebug.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleDebug;
                @DevCheatF1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF1;
                @DevCheatF1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF1;
                @DevCheatF1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF1;
                @DevCheatF2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF2;
                @DevCheatF2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF2;
                @DevCheatF2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF2;
                @DevCheatF3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF3;
                @DevCheatF3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF3;
                @DevCheatF3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF3;
                @DevCheatF4.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF4;
                @DevCheatF4.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF4;
                @DevCheatF4.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF4;
                @DevCheatF5.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF5;
                @DevCheatF5.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF5;
                @DevCheatF5.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF5;
                @DevCheatF6.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF6;
                @DevCheatF6.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF6;
                @DevCheatF6.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF6;
                @DevCheatF7.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF7;
                @DevCheatF7.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF7;
                @DevCheatF7.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDevCheatF7;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @SonarKnife.started += instance.OnSonarKnife;
                @SonarKnife.performed += instance.OnSonarKnife;
                @SonarKnife.canceled += instance.OnSonarKnife;
                @DistractionKnife.started += instance.OnDistractionKnife;
                @DistractionKnife.performed += instance.OnDistractionKnife;
                @DistractionKnife.canceled += instance.OnDistractionKnife;
                @TeleportKnife.started += instance.OnTeleportKnife;
                @TeleportKnife.performed += instance.OnTeleportKnife;
                @TeleportKnife.canceled += instance.OnTeleportKnife;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @AimKnife.started += instance.OnAimKnife;
                @AimKnife.performed += instance.OnAimKnife;
                @AimKnife.canceled += instance.OnAimKnife;
                @ThrowKnife.started += instance.OnThrowKnife;
                @ThrowKnife.performed += instance.OnThrowKnife;
                @ThrowKnife.canceled += instance.OnThrowKnife;
                @UnequipKnife.started += instance.OnUnequipKnife;
                @UnequipKnife.performed += instance.OnUnequipKnife;
                @UnequipKnife.canceled += instance.OnUnequipKnife;
                @ActivateKnife.started += instance.OnActivateKnife;
                @ActivateKnife.performed += instance.OnActivateKnife;
                @ActivateKnife.canceled += instance.OnActivateKnife;
                @ToggleDebug.started += instance.OnToggleDebug;
                @ToggleDebug.performed += instance.OnToggleDebug;
                @ToggleDebug.canceled += instance.OnToggleDebug;
                @DevCheatF1.started += instance.OnDevCheatF1;
                @DevCheatF1.performed += instance.OnDevCheatF1;
                @DevCheatF1.canceled += instance.OnDevCheatF1;
                @DevCheatF2.started += instance.OnDevCheatF2;
                @DevCheatF2.performed += instance.OnDevCheatF2;
                @DevCheatF2.canceled += instance.OnDevCheatF2;
                @DevCheatF3.started += instance.OnDevCheatF3;
                @DevCheatF3.performed += instance.OnDevCheatF3;
                @DevCheatF3.canceled += instance.OnDevCheatF3;
                @DevCheatF4.started += instance.OnDevCheatF4;
                @DevCheatF4.performed += instance.OnDevCheatF4;
                @DevCheatF4.canceled += instance.OnDevCheatF4;
                @DevCheatF5.started += instance.OnDevCheatF5;
                @DevCheatF5.performed += instance.OnDevCheatF5;
                @DevCheatF5.canceled += instance.OnDevCheatF5;
                @DevCheatF6.started += instance.OnDevCheatF6;
                @DevCheatF6.performed += instance.OnDevCheatF6;
                @DevCheatF6.canceled += instance.OnDevCheatF6;
                @DevCheatF7.started += instance.OnDevCheatF7;
                @DevCheatF7.performed += instance.OnDevCheatF7;
                @DevCheatF7.canceled += instance.OnDevCheatF7;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_AllControlSchemesSchemeIndex = -1;
    public InputControlScheme AllControlSchemesScheme
    {
        get
        {
            if (m_AllControlSchemesSchemeIndex == -1) m_AllControlSchemesSchemeIndex = asset.FindControlSchemeIndex("AllControlSchemes");
            return asset.controlSchemes[m_AllControlSchemesSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnSonarKnife(InputAction.CallbackContext context);
        void OnDistractionKnife(InputAction.CallbackContext context);
        void OnTeleportKnife(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnAimKnife(InputAction.CallbackContext context);
        void OnThrowKnife(InputAction.CallbackContext context);
        void OnUnequipKnife(InputAction.CallbackContext context);
        void OnActivateKnife(InputAction.CallbackContext context);
        void OnToggleDebug(InputAction.CallbackContext context);
        void OnDevCheatF1(InputAction.CallbackContext context);
        void OnDevCheatF2(InputAction.CallbackContext context);
        void OnDevCheatF3(InputAction.CallbackContext context);
        void OnDevCheatF4(InputAction.CallbackContext context);
        void OnDevCheatF5(InputAction.CallbackContext context);
        void OnDevCheatF6(InputAction.CallbackContext context);
        void OnDevCheatF7(InputAction.CallbackContext context);
    }
}
